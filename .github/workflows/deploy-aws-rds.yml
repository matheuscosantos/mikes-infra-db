name: Deploy AWS RDS PostgreSQL

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Check if the aws_db_instance already exists
      run: |
        if aws rds describe-db-instances --db-instance-identifier mikes-db; then
          echo "O aws_db_instance já existe. Não é necessário criar um novo."
          exit 0
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2


    - name: Initialize Terraform
      run: terraform init

    - name: Deploy RDS
      run: terraform apply -auto-approve

    - name: Capture Outputs
      id: outputs
      run: echo "::set-output name=rds_endpoint::$(terraform output -raw rds_endpoint)"

    - name: Store RDS Endpoint as Environment Variable
      run: |
        echo "RDS_ENDPOINT=${{ steps.outputs.outputs }}" >> $GITHUB_ENV